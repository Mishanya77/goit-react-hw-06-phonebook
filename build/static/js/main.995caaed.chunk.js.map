{"version":3,"sources":["transitions/slideFromLeft.module.css","components/ContactElement/ContactElement.module.css","components/ContactForm/ContactForm.module.css","components/Notification/Notification.module.css","components/PhoneBook/PhoneBook.module.css","transitions/slideFromRight.module.css","transitions/pop.module.css","redux/phonebook/phonebookActionTypes.js","redux/phonebook/phonebookActions.js","redux/phonebook/phonebookReducer.js","redux/store.js","components/ContactForm/ContactForm.js","redux/phonebook/phonebookSelectors.js","components/ContactElement/ContactElement.js","components/ContactList/ContactList.js","components/ContactList/ContactListContainer.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/Notification/Notification.js","components/PhoneBook/PhoneBook.js","services/localStorage.js","components/PhoneBook/PhoneBookContainer.js","index.js"],"names":["module","exports","fetchContacts","createAction","Types","addContact","deleteContact","filterContacts","contactsReducer","createReducer","Actions","state","action","payload","filter","id","filterReducer","combineReducers","contacts","store","configureStore","reducer","phoneBookReducer","ContactForm","onFormSubmit","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","className","styles","form","htmlFor","type","value","required","onChange","target","mask","placeholder","getContacts","getFilter","createSelector","toLowerCase","includes","ContactElement","contact","onDeleteContact","contactElement","contactContainer","onClick","deleteBtn","ContactList","TransitionGroup","component","map","CSSTransition","key","timeout","unmountOnExit","classNames","slideFromLeftTransition","connect","dispatch","phonebookActions","Filter","onChangeFilter","Notification","message","notification","PhoneBook","onAddContact","setMessage","showMessage","setShowMessage","useEffect","contactsLS","JSON","parse","localStorage","getItem","Storage","setItem","stringify","in","slideFromRightTransition","appear","title","formData","contactToAdd","uuidv4","find","setTimeout","length","popTransition","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.995caaed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideFromLeft_enter__1F_da\",\"appear\":\"slideFromLeft_appear__1l-72\",\"enterActive\":\"slideFromLeft_enterActive__3eZCj\",\"appearActive\":\"slideFromLeft_appearActive__3y4gt\",\"appearDone\":\"slideFromLeft_appearDone__1x8S_\",\"exit\":\"slideFromLeft_exit__2e3ms\",\"exitActive\":\"slideFromLeft_exitActive__TkYGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"ContactElement_deleteBtn__20PqZ\",\"contactElement\":\"ContactElement_contactElement__j-CDg\",\"contactContainer\":\"ContactElement_contactContainer__2fBt4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1C7Ma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PhoneBook_title__14m84\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideFromRight_enter__6dU6W\",\"enterActive\":\"slideFromRight_enterActive__3xCMV\",\"exit\":\"slideFromRight_exit__2KA8L\",\"exitActive\":\"slideFromRight_exitActive__2TwKz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__1NM7x\",\"enterActive\":\"pop_enterActive__1Bhql\",\"exit\":\"pop_exit__1_phz\",\"exitActive\":\"pop_exitActive__3xbz2\"};","export default {\n  FETCH_CONTACTS: 'FETCH_CONTACTS',\n  ADD_CONTACT: 'ADD_CONTACT',\n  DELETE_CONTACT: 'DELETE_CONTACT',\n  FILTER_CONTACTS: 'FILTER_CONTACTS',\n};\n","// import Types from './phonebookActionTypes';\n\n// export const fetchContacts = (contacts) => ({\n//   type: Types.FETCH_CONTACTS,\n//   payload: contacts,\n// });\n\n// export const addContact = (contact) => ({\n//   type: Types.ADD_CONTACT,\n//   payload: contact,\n// });\n\n// export const deleteContact = (contact) => ({\n//   type: Types.DELETE_CONTACT,\n//   payload: contact,\n// });\n\n// export const filterContacts = (query) => ({\n//   type: Types.FILTER_CONTACTS,\n//   payload: query,\n// });\n\n// With redux-toolkit\nimport { createAction } from '@reduxjs/toolkit';\nimport Types from './phonebookActionTypes';\n\nexport const fetchContacts = createAction(Types.FETCH_CONTACTS);\nexport const addContact = createAction(Types.ADD_CONTACT);\nexport const deleteContact = createAction(Types.DELETE_CONTACT);\nexport const filterContacts = createAction(Types.FILTER_CONTACTS);\n","// import { combineReducers } from 'redux';\n// import Types from './phonebookActionTypes';\n\n// const contactsReducer = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case Types.FETCH_CONTACTS:\n//       return payload;\n//     case Types.ADD_CONTACT:\n//       return [...state, payload];\n//     case Types.DELETE_CONTACT:\n//       return state.filter(({ id }) => id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\n// const filterReducer = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case Types.FILTER_CONTACTS:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n\n// export default combineReducers({\n//   contacts: contactsReducer,\n//   filter: filterReducer,\n// });\n\n// With redux-toolkit\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as Actions from './phonebookActions';\n\nconst contactsReducer = createReducer([], {\n  [Actions.fetchContacts]: (state, action) => action.payload,\n  [Actions.addContact]: (state, action) => [...state, action.payload],\n  [Actions.deleteContact]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst filterReducer = createReducer('', {\n  [Actions.filterContacts]: (state, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport phoneBookReducer from './phonebook/phonebookReducer';\n\nconst store = configureStore({ reducer: phoneBookReducer });\n\nexport default store;\n","// Core\nimport React, { useState } from 'react';\nimport MaskedInput from 'react-text-mask';\nimport PropTypes from 'prop-types';\n// Styles\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = ({ onFormSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!name || !number) {\n      return;\n    }\n\n    onFormSubmit({ name, number });\n    reset();\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={`${styles.form} container shadow`}>\n      <label htmlFor=\"name\">\n        Name\n        <input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          required\n          onChange={({ target }) => setName(target.value)}\n        />\n      </label>\n      <label htmlFor=\"number\">\n        Number\n        <MaskedInput\n          mask={[\n            '(',\n            /\\d/,\n            /\\d/,\n            /\\d/,\n            ')',\n            ' ',\n            /\\d/,\n            /\\d/,\n            /\\d/,\n            '-',\n            /\\d/,\n            /\\d/,\n            /\\d/,\n            /\\d/,\n          ]}\n          name=\"number\"\n          required\n          value={number}\n          onChange={({ target }) => setNumber(target.value)}\n          placeholder=\"Enter a phone number\"\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { createSelector } from 'reselect';\n\nexport const getContacts = (state) => state.contacts;\n\nexport const getFilter = (state) => state.filter;\n\n// Memoization\nexport const filterContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) =>\n    contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Styles\nimport styles from './ContactElement.module.css';\n\nconst ContactElement = ({ contact, onDeleteContact }) => (\n  <div className={`${styles.contactElement} container shadow`}>\n    <div className={styles.contactContainer}>\n      <span>{contact.name}</span>\n      <span>{contact.number}</span>\n    </div>\n    <button\n      onClick={() => onDeleteContact(contact.id)}\n      className={styles.deleteBtn}\n      type=\"button\"\n    >\n      ✕\n    </button>\n  </div>\n);\n\nContactElement.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactElement;\n","// Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n// Components\nimport ContactElement from '../ContactElement/ContactElement';\n// Transitions\nimport slideFromLeftTransition from '../../transitions/slideFromLeft.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <TransitionGroup component=\"ul\">\n    {contacts.map((contact) => (\n      <CSSTransition\n        key={contact.id}\n        timeout={200}\n        unmountOnExit\n        classNames={slideFromLeftTransition}\n      >\n        <li>\n          <ContactElement contact={contact} onDeleteContact={onDeleteContact} />\n        </li>\n      </CSSTransition>\n    ))}\n  </TransitionGroup>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport * as phonebookActions from '../../redux/phonebook/phonebookActions';\nimport { filterContacts } from '../../redux/phonebook/phonebookSelectors';\nimport ContactList from './ContactList';\n\nconst mapStateToProps = (state) => ({\n  contacts: filterContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (id) => dispatch(phonebookActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChangeFilter }) => (\n  <div className=\"container shadow\">\n    <p>Find contacts by name:</p>\n    <input\n      name=\"filter\"\n      value={value}\n      onChange={onChangeFilter}\n      placeholder=\"Type here to search...\"\n    />\n  </div>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\nimport * as phonebookActions from '../../redux/phonebook/phonebookActions';\nimport Filter from './Filter';\n\nconst mapStateToProps = (state) => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangeFilter: (e) =>\n    dispatch(phonebookActions.filterContacts(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <div className={styles.notification}>{message}</div>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","// Core\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport * as Storage from '../../services/localStorage';\n// Components\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactListContainer';\nimport Filter from '../Filter/FilterContainer';\nimport Notification from '../Notification/Notification';\n// Styles\nimport styles from './PhoneBook.module.css';\n// Transitions\nimport slideFromRightTransition from '../../transitions/slideFromRight.module.css';\nimport slideFromLeftTransition from '../../transitions/slideFromLeft.module.css';\nimport popTransition from '../../transitions/pop.module.css';\n\nimport 'normalize.css';\n\nfunction PhoneBook({ contacts, filter, onAddContact, fetchContacts }) {\n  const [message, setMessage] = useState('');\n  const [showMessage, setShowMessage] = useState(false);\n\n  useEffect(() => {\n    const contactsLS = Storage.getContactsFromLS();\n    if (contactsLS) {\n      fetchContacts(contactsLS);\n    }\n  }, [fetchContacts]);\n\n  useEffect(() => {\n    Storage.saveContactsToLS(contacts);\n  }, [contacts]);\n\n  const handleFormSubmit = (formData) => {\n    const contactToAdd = {\n      id: uuidv4(),\n      name: formData.name,\n      number: formData.number,\n    };\n\n    if (contacts.find((contact) => contact.name === contactToAdd.name)) {\n      setMessage('Contact already exists!');\n      setShowMessage(true);\n      setTimeout(() => {\n        setShowMessage(false);\n      }, 2000);\n      return;\n    }\n\n    onAddContact(contactToAdd);\n  };\n\n  return (\n    <div className=\"container\">\n      <CSSTransition\n        in={showMessage}\n        timeout={200}\n        classNames={slideFromRightTransition}\n        unmountOnExit\n      >\n        <Notification message={message} />\n      </CSSTransition>\n\n      <CSSTransition\n        in\n        appear\n        timeout={500}\n        classNames={slideFromLeftTransition}\n      >\n        <h1 className={styles.title}>Phonebook</h1>\n      </CSSTransition>\n\n      <ContactForm onFormSubmit={handleFormSubmit} />\n      <CSSTransition\n        in={contacts.length > 1 || filter.length > 0}\n        timeout={200}\n        classNames={popTransition}\n        unmountOnExit\n      >\n        <Filter />\n      </CSSTransition>\n\n      <ContactList />\n    </div>\n  );\n}\n\nPhoneBook.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  filter: PropTypes.string.isRequired,\n  onAddContact: PropTypes.func.isRequired,\n  fetchContacts: PropTypes.func.isRequired,\n};\n\nexport default PhoneBook;\n","export function getContactsFromLS() {\n  try {\n    return JSON.parse(localStorage.getItem('contacts'));\n  } catch {\n    return undefined;\n  }\n}\n\nexport function saveContactsToLS(contacts) {\n  return localStorage.setItem('contacts', JSON.stringify(contacts));\n}\n","import { connect } from 'react-redux';\nimport * as phonebookActions from '../../redux/phonebook/phonebookActions';\nimport PhoneBook from './PhoneBook';\nimport {\n  getContacts,\n  getFilter,\n} from '../../redux/phonebook/phonebookSelectors';\n\nconst mapStateToProps = (state) => ({\n  contacts: getContacts(state),\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchContacts: (contacts) =>\n    dispatch(phonebookActions.fetchContacts(contacts)),\n\n  onAddContact: (contact) => dispatch(phonebookActions.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBook);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport PhoneBook from './components/PhoneBook/PhoneBookContainer';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PhoneBook />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}